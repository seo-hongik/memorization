오라클 데이터베이스 계정


제공되는 계정은 시스템 권한을 가진 DBA(DataBase ADministrator)용 계정(SYS, SYSTEM)과 교육용계정(HR)두가지로 나뉩니다. 

데이터 베이스 사용자는 오라클 계정(Account)이라는 용어와 같은 의미로 사용됩니다. 

--------------------------
사용자 계정 

오라클을 설치하면 한개이상의 데이터 베이스 권한을 갖는 디폴트(기본적인) 사용자가 존재 합니다. 
________________________________________________________
사용자 계정    	| 설명
_________________________________________________________
SYS		| 오라클 Super 사용자 계정이며 데이터베이스에서 발생하는 모든 문제들을 처리할 수 있는 권한을 가지고 있습니다.	
__________________________________________________________
SYSTEM		| 오라클 데이터베이스를 유지보수 관리할 때 사용하는 사용자 계정이며 SYS사용자와의 차이점은 데이터 베이스를 생성할 수 있는 권한이없으면 불완전 복구를 할 수 없습니다.
___________________________________________________________
HR		| 처음 오라클을 사용하는 사용자의 실습을 위해 만들어 놓은 교육용 계정입니다. 
___________________________________________________________


-------------------
디폴트 사용자 중에서 SYS와 SYSTEM은 DBA 권한을 가진 사용자 로서 다른 모든 사용자에 대한 정보를 조회할 수 있습니다. 

DBA 권한을 가진 관리자는 사용자를 선택하거나 삭제 , 변경 등의 시스템 권한을 가지고 있습니다. 


------------------

데이터베이스 관리 시스템


정보를 '데이터'라고 하는데 이러한 데이터를 담고 있는 것을 '데이터베이스'라고 합니다. 

데이터베이스는 조직화된 정보의 집합이며 데이터를 관리하려면 '데이터베이스 관리 시스템'이 필요합니다. 

데이터베이스 관리 시스템(Database Management System DBMS)은 연관성 있는 데이터들의 집합을 효율적으로 응용하기 위해 구성된 소프트웨어들의 집합테 입니다. 


제품 Oracle, MS-SQL, MySQL, MariaDB, Informix, DB2

----------------------------------------

관계형 데이터베이스 

정보저장을 위해 관계나 2차원 테이블을 이용합니다. 

	
________________________________________________________
	   	|	                              ->레코드
_________________________________________________________
		| 	
__________________________________________________________
		| 
___________________________________________________________
		| 
___________________________________________________________
|
v	
컬럼
	

-----------------------------------------
데이터 타입

CHAR(size) : 문자 데이터를 저장하기 위한 데이터 타입으로 *'고정 길이'의 문자열을 저장합니다. 

VARCHAR2 (size) : 주소를 저장하기 위한 컬럼은 VARCHAR2와 같이 *'가변적인 길이'의 문자열을 저장하기 위해 제공되는 데이터 타입을 사용합니다. 

NUMBER(precision,scale) : 

->정밀도(p): 1~38, 스테일(,s) :-84~127

->precision은 소수점을 포함한 전체 자리수를 의미합니다. 

->scale은 소수점 이하 자리수를 지정합니다. 

->scale을 생략한 채 precision만 지정하면 소수점 이하는 반올림 되어 정수값만 저장됩니다.

-> 모두 생략하면 입력한 데이터 값만큼 공간이 할당 됩니다. 

NUMBER(8,2) 1 2 3 4 5 6. 7 8

(123.88)	NUMBER(5,2)= 123.89

(12389) 	NUMBER(5,-2) = 100



 

DATE : 세기,년,월,일,시간, 분,초의 날짜 및 시간 데이터를 저장하기 위한 테이터 형입니다. 

기본 날짜 형식 : "YY/MM/DD" "년/월/일"

---------------------------------------

데이터 무결성 제약 조건

제약조건은 칼럼에 들어가는 값을 제한하는 것 테이터의 정확성과 일관성을 보장 합니다. 

NOT NULL 제약조건

->NULL은 할당 받지 않는 값, 아직 무엇인지 모르는 값을 의미합니다. 


->NULL은 0이나 스페이스(공백문자)와는 다른 값으로 칼럼에 어떠한 값도 정해지지 않았을 경우 갖게 되는 불확실한 값입니다. 
(자바의 null과 비슷, 존재하지 않은 값)
----------------------------------------
기본 키(primary Key)제약 조건 

->기본키란 한 테이블 내에서 '칼럼'이 '동일한 값을 가질 수 없게' 제약조건을 지정하는 것입니다. 

->테이블의 로우(행)을 식별 구분할 수 있도록 합니다. 

->NULL값은 가질수 없습니다. 

----------------------------------------
외래 키(foreign Key) 제약 조건

->관계형 데이터베이스는 테이터가 중봅되는 것을 막기 위해서 정보를 여러 테이블에 나눠서 저장해 두었다가 
원하는 정보를 얻기 위해서 여러 테이블을 연결하여 사용하며 이를 위해서 특정 테이블의 칼럼이 다른 테이블의 칼럼을 참조하게 됩니다. 


*
->다른 테이블의 칼럼 값을 '참조하는' 테이블을 '자식테이블' 이라고 하고 다른 테이블에 의해 '참조되는' 테이블을 '부모테이블'이라고 합니다. 

---------------------------------------


사용자 생성하기 

create user [id명] identified by [비밀번호];

[문제1]
1.*tiger라는 패스워드로 *scott이라는 사용자를 만들어주세요 

->create user *scott identified by *tiger;
 실제는 *포함하지 않음


--------------

권한 부여하기 

생성된 사용자 계정에 권한을 부여합니다 .


connect: 데이터 베이스에 접속을 위한 권한

resource: 테이블 생성이 가능하도록 하는 권한

	*grant resource, connect *to scott;

실제는 *포함하지 않음

	

------------

DCL(영구 저장하기) 

'오라클'에서는 데이터를 추가하면 데이터가 영구 저장되는 것이 아니고 '메모리 상에만' 추가 된 것입니다. 


추가한 데이터를 영구적으로 저장하지 않으려면 *rollback이란 명령어로 취소 합니다. 


데이터를 영구적으로 저장하기 위해서는 *commit 명령어를 실행 합니다. 실제는
 *포함하지 않음

명령어 : commit;

-----------------------
현재 사용자 정보 알아내기 


SHOW USER;


----------------------

테이블을 생성하는 create table


CREATE TABLE 테이블명 
(컬럼명 컬럼타입);

--------------------
테이블 구조를 살펴보기위한 DESC
DESCRIBE은 테이블의 구조 (칼럼명, 테이터형, 길이와 NULL허용 유무 등)를 확인하기 위해 사용하는 명령어 입니다.

DESC[RIBE] 테이블명;



DROP TABLE 테이블명

COMMIT;

CREARTE (ex.)

CREATE TABLE EMPLOYEE(
    ENO         NUMBER(4)  CONSTRAINT PK_EMP PRIMARY KEY, --사원번호
    ENAME       VARCHAR2(10),                             --사원명
    JOB         VARCHAR2(9),                              --업무명
    MANAGER     NUMBER(4),                                --해당사원의 상사번호
    HIREDATE    DATE,                                     --입사일  
    SALARY      NUMBER(7,2),                              --급여    
    COMMIION   NUMBER(7,2),                              --커미션    
    DNO         NUMBER(2)   CONSTRAINT FK_DNO REFERENCES DEPARTMENT --부서번호
);

COMMIT;
----------------------------------
DESC EMPLOYEE;


CONSTRAINT 이 들어가면 NOT NULL
CONSTRAINT 이 없으면 설정해줘야함

