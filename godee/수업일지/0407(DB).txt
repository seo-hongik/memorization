테이블을 생성하는 CREATE TABLE


테이블명은 객체를 의미할 수 있는 적절한 이름을 사용합니다. 

가능한 단수형을 권고합니다. 

테이블명은 다른 테이블의 이름과 중복되지 않아야 합니다. 

	_1_2 안된다 명이 달라야함

한테이블 내에서는 컬럼명이 중복되게 지정할 수 없다 

테이블 이름은 지정하고 각 컬럼들은 괄호로"()"로 묵어 지정합니다.

각 컬럼들은 콤마","로 구분되고 테이블 생성문의 끝은 항상 세미콜론";"로 끝납니다. 

컬럼에 대해서는 다른 테이블까지 고려하여 데이터 베이스 내에서는 일관성있게 사용하는 것이 좋습니다. 

컬럼명 뒤에 데이터 유형은 꼭 지정되어야 합니다. 

테이블명과 컬럼명은 반드시 문자로 시작해야 합니다. 

A_Z, a_z, 0-9, _, $, # 문자만 허용됩니다. 

테이블 생성시 대/소문자 구분은 하지 않습니다. 

(기본적으로 테이블이나 컬럼명은 대문자로 만들어 줍니다.)

DATE 유형은 별도로 크기를 지정하지 않습니다. 

문자 데이터 유형은 반드시 가질 수 있는 최대길이를 표시해야 합니다. 

컬럼명과 컬럼의 구분은 콤마로 하되 마지막 컴럼은 콤마를 찍지 않습니다. 

컬럼에 대한 제약조건 있으면 CONSTRAINT를 이용하여 추가할 수 있습니다. 

---------------------------------

제약조건 CONSTRAINT

PRIMARY KEY (기본키)
-	테이블에 저장된 행 데이터를 고유하게 식별하기 위한 기본키 정의
-	하나의 테이블에 하나의 기본키 제약만 정의할 수 있습니다. 
-	기본키 제약을 정의하면 DBMS는 자동으로 UNIQUE 인덱스를 생성하며 , 기본키를 구성하는 컬럼에는 NULL을 입력할 수 없습니다. 
-	Primary key  = Unique key & NOT NULL

Unique key(고유키)
-	테이블에 저장된 행 데이터를 고유하게 식별하기 위한 고유키를 정의합니다. 
-	단 NULL은 고유키 제약의 대상이 아니므로, NULL값을 가진 행이 여라 개 있더라고 고유키 제약 위반이 되지 않습니다.

NOT NULL 
-	 NULL 값의 입력을 금지합니다. 
- 	디폴트 상태에서는 모든 컬럼에서 null을 허가하고 있지만, 이 제약을 지정함으로서 해당 컬럼은 *입력 필수가 됩니다. 
(디비에다 처리하면 스크립트에도 처리해야함)

CHECK
-	입력할 수 있는 값의 범위를 제안합니다. 
-	CHECK제약으로는 TRUE or FALSE로 평가한 수 있는 논리식을 지정합니다. 
	

FOREIGN Key(외래키)

-	관계형 데이터베이스에서 테이블간의 관계를 정의하기 위해 기본키를 다른 태이블의 외래키로 복사하는 경우 외래키가 생성됩니다. 
-	외래키 지정 시 참조 무결성 제약옵션을 선택할 수 있습니다. 

데이터를 조회하기 위한 SECLECT문

SECLECT 문 은 테이블에 저장된 데이터를 검색하기 위한 명령문 입니다. 

SELECT [DISTINCT] {* | column_name[alias]...} // alias(코드 as)
FROM table_name
[WHERE condition]
[GROUP BY group_by_expression]
[HAVING    group_condition]
[ORDER BY [desc | asc] ]; // 기본적으로 ascend
/*                                
SELECT, FROM 외우기

desc 내림차순
asc 오름차순

GROUP HAVING 같이와야한다*/


SELECT 절 : 조회하고자 하는 컬럼명의 리스트를 나열합니다.

DISTINCT 절 : 동일한 내용을 한번씩만 출력하여 중복을 제거합니다. 

FROM 절 : 조회하고자 하는 테이블명의 리스트를 나열합니다.

WHERE 절: 조회하고자 하는 로우의 조건을 나열합니다.

GROUP by 절: 동일한 값을 갖는 로우들을 한 그룹으로 묶습니다.

HAVING 절: 로우들의 그룹이 만족해야 하는 조건을 제시합니다.

ODER BY 절 로우들의 정렬 순서를 제시합니다.
---------------------
DUAL 테이블

한 행으로 결과를 출력하기 위해 제공되는 테이블

