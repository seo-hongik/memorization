클래스의 개념

클래스 :데이터와 처리동작을 하나로 모아 놓은것 사물의 일반적인 상태와 특성 및 기능을 정리한 것

데이터 :필드 (멤버변수)

처리동작 :메서드 (멤버 함수)

클래스의 멤버 :필드 + 메서드 



-----------------------------------------------------------------------------------------

클래스 정의(선언)

class 클래스명 {
					멤버(형 부터 return까지)
 형(type)명  필드(field)명;

 리턴값의 형(type) 메서드(method)명 (매개변수 목록){ 메서드
	실행할 문장(statement);
	return 식(expression);

	}



}

------------------------------------------------------------------------------------------
 
객체(object) 생성

선언한 클래스를 이용하려면 객체(인스턴스)를 생성합니다. 

Book book1;

book = new Book();

====
Book book1 = new Book();

----------------------------------------------------------------------------------------


클레스 안의 변수


------------------


형(type)  기본(default)값

int 	0

float 	0.0f

double   0.0d

char	null

boolean  false

참조형    null

------------------------------------------------------------------------------------

멤버 접근

객체를 생성하면 멤버에 접근할 수 있습니다. 


멤버에 접근하는 객체를 생성하면 멤버(필드)에 접근해서 실제 값을 저장할 수 있게 됩니다. 



-------------------

자동차

차량번호

연료량

스피드



차량번호 부여하기 

연료를 넣기 

남은 연료를 표시하기 

스피드를 표시하기 

-------------------------

메서드

메서드 정의 : 특정 처리를 한 곳에 모을 수 있습니다. 



메서드 호출


---------------------

this 

실행되고 있는 객체 자신


-------------------

메소드 인수

가인수(parameter) 메소드에 선언되어 있는 인수(변수)

실인수(argument) 메소드 호출 시 전달되는 인수(값)

------------------

클래스 객체 지향 프로그램은 클래스를 기반으로 프로그래밍 합니다.

클래스는 객체의 속성과 기능을 코드로 구현한 것입니다.

객체를 클래스로 구현하는 것을 "클래스를 정의합니다."라고 합니다. 

클래스를 정의하려면 우선 클래스의 *이름과 클래스가 가지는 *속성 또는 *특성이 필요합니다.

------------------

클래스 구성하기

객체지향 ppt 2페이지		

(접근 제어자 or 접근 제한자) class 클래스명{

	필드(멤버변수);
	메서드(멤버 함수);

}




